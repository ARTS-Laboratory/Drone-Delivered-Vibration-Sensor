%clear all
%close all
%clc

%% filter design function

function Hd = LP_Filter
%LP_FILTER Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.9 and DSP System Toolbox 9.11.
% Generated on: 23-May-2021 22:31:53

% Equiripple Lowpass filter designed using the FIRPM function.

% All frequency values are in Hz.
Fs = 1233.1;  % Sampling Frequency

Fpass = 20;              % Passband Frequency
Fstop = 25;              % Stopband Frequency
Dpass = 0.057501127785;  % Passband Ripple
Dstop = 0.0001;          % Stopband Attenuation
dens  = 20;              % Density Factor

% Calculate the order from the parameters using FIRPMORD.
[N, Fo, Ao, W] = firpmord([Fpass, Fstop]/(Fs/2), [1 0], [Dpass, Dstop]);

% Calculate the coefficients using the FIRPM function.
b  = firpm(N, Fo, Ao, W, {dens});
Hd = dfilt.dffir(b);

% [EOF]
ans=Hd;

 
%% Export Data

D2 = dlmread('C:\Users\joud\OneDrive - University of South Carolina\Mech research\test\FRF test\Frequency Sweep\Test 11 Fs 450 FRF\FRF Test VI.lvm',',',2000);

%time & Acc
tt=D2(:,1);
dd=D2(:,2);


%filter time domain
x=dd;
%fpass=25;
%[y,d] = lowpass(x,fpass,Fs) ;
y= filter(Hd,x);

%Time plot
figure(1);
plot(tt,y);
hold on 
plot(tt,dd);
hold off
grid on
xlabel("time (s)");
ylabel("acceleration ");
legend("Package Data");

%% unfiltered FFT
T=tt(2)-tt(1);
Fs_Time=1/T
L = length(tt);             % Length of signal
Y = fft(dd*1000);           %THE FFT IS SCALED BY A 1000
P2 = abs(Y/L);
P1 = P2(1:L/2+1);
P1(2:end-1) = 2*P1(2:end-1);
f = Fs_Time*(0:(L/2))/L;

%Plot overall FFt
figure(2);
plot(f,P1); 
title('Single-Sided Amplitude Spectrum of X(t)')
xlabel('f (Hz)')
ylabel('|P1(f)|')
xlim([0,20])
ylim([0,20])

%% Filtered FFT

%Construct overall FFT
T=tt(2)-tt(1);
Fs_Time=1/T
L = length(tt);             % Length of signal
Y = fft(y*1000);           %THE FFT IS SCALED BY A 1000
P2 = abs(Y/L);
P1 = P2(1:L/2+1);
P1(2:end-1) = 2*P1(2:end-1);
f = Fs_Time*(0:(L/2))/L;

%Plot overall FFt
figure(3);
plot(f,P1); 
title('Single-Sided Amplitude Spectrum of X(t)')
xlabel('f (Hz)')
ylabel('|P1(f)|')
xlim([0,20])
ylim([0,20])

%% LP filter FFT
x=P1;
Fltr= filter(Hd,x);

%Plot overall FFt
figure(4);
plot(f,Fltr);
title('Single-Sided Amplitude Spectrum of X(t)')
xlabel('f (Hz)')
ylabel('|P1(f)|')
xlim([0,35])
ylim([-10,35])

end
